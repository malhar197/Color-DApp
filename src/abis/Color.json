{
  "contractName": "Color",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colors",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_color",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"colors\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_color\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/malhar197/Desktop/final-presentation/Color-DApp/NFT/src/contracts/Color.sol\":\"Color\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/malhar197/Desktop/final-presentation/Color-DApp/NFT/src/contracts/Color.sol\":{\"keccak256\":\"0x22b0026aaf4f45c240c31ca9c1f9e6e11f9a4b3653f11ec316312d23ef7f423a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3e9828d7b14df27bba2d7fb45d7fcf9792fb3f7750103b9062fc5a05fe5c6d4\",\"dweb:/ipfs/QmbLQjRahdzx2rRVdW4HUKEWtNo3LE3v7U8nRHimxmZ143\"]},\"/Users/malhar197/Desktop/final-presentation/Color-DApp/NFT/src/contracts/ERC721.sol\":{\"keccak256\":\"0xf94c1d827f14b894a14a96b1311d2e1e540b5de49b8877649aa806500c197dad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78f7baae27fe78b510668a1cbf6ccf65bf7a4e4e8fca8a19ca8d0e11462c97d2\",\"dweb:/ipfs/QmSRwhutN8AVyw7WEoKkzA7UgB7Lfejkj2ee13F3qAWsWV\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f436f6c6f720000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f434f4c4f52000000000000000000000000000000000000000000000000000000815250620000966301ffc9a760e01b6200011860201b60201c565b8160069080519060200190620000ae92919062000221565b508060079080519060200190620000c792919062000221565b50620000e06380ac58cd60e01b6200011860201b60201c565b620000f8635b5e139f60e01b6200011860201b60201c565b6200011063780e9d6360e01b6200011860201b60201c565b5050620002c7565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200026457805160ff191683800117855562000295565b8280016001018555821562000295579182015b828111156200029457825182559160200191906001019062000277565b5b509050620002a49190620002a8565b5090565b5b80821115620002c3576000816000905550600101620002a9565b5090565b612d6280620002d76000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636352211e116100ad578063b88d4fde11610071578063b88d4fde14610656578063bd11f69d1461075b578063c87b56dd14610802578063d85d3d27146108a9578063e985e9c51461096457610121565b80636352211e146104505780636c0360eb146104a857806370a082311461052b57806395d89b4114610583578063a22cb4651461060657610121565b806318160ddd116100f457806318160ddd146102b257806323b872dd146102d05780632f745c591461033e57806342842e0e146103a05780634f6ccce71461040e57610121565b806301ffc9a71461012657806306fdde0314610189578063081812fc1461020c578063095ea7b314610264575b600080fd5b6101716004803603602081101561013c57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506109de565b60405180821515815260200191505060405180910390f35b610191610a45565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d15780820151818401526020810190506101b6565b50505050905090810190601f1680156101fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102386004803603602081101561022257600080fd5b8101908080359060200190929190505050610ae7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b06004803603604081101561027a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b82565b005b6102ba610cc6565b6040518082815260200191505060405180910390f35b61033c600480360360608110156102e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cd7565b005b61038a6004803603604081101561035457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d4d565b6040518082815260200191505060405180910390f35b61040c600480360360608110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610da8565b005b61043a6004803603602081101561042457600080fd5b8101908080359060200190929190505050610dc8565b6040518082815260200191505060405180910390f35b61047c6004803603602081101561046657600080fd5b8101908080359060200190929190505050610deb565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b0610e22565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f05780820151818401526020810190506104d5565b50505050905090810190601f16801561051d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61056d6004803603602081101561054157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ec4565b6040518082815260200191505060405180910390f35b61058b610f99565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105cb5780820151818401526020810190506105b0565b50505050905090810190601f1680156105f85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106546004803603604081101561061c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061103b565b005b6107596004803603608081101561066c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156106d357600080fd5b8201836020820111156106e557600080fd5b8035906020019184600183028401116401000000008311171561070757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111f1565b005b6107876004803603602081101561077157600080fd5b8101908080359060200190929190505050611269565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107c75780820151818401526020810190506107ac565b50505050905090810190601f1680156107f45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61082e6004803603602081101561081857600080fd5b8101908080359060200190929190505050611322565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561086e578082015181840152602081019050610853565b50505050905090810190601f16801561089b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610962600480360360208110156108bf57600080fd5b81019080803590602001906401000000008111156108dc57600080fd5b8201836020820111156108ee57600080fd5b8035906020019184600183028401116401000000008311171561091057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061160b565b005b6109c66004803603604081101561097a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117cb565b60405180821515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610add5780601f10610ab257610100808354040283529160200191610add565b820191906000526020600020905b815481529060010190602001808311610ac057829003601f168201915b5050505050905090565b6000610af28261185f565b610b47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612c57602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b8d82610deb565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612cdb6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610c3361187c565b73ffffffffffffffffffffffffffffffffffffffff161480610c625750610c6181610c5c61187c565b6117cb565b5b610cb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612baa6038913960400191505060405180910390fd5b610cc18383611884565b505050565b6000610cd2600261193d565b905090565b610ce8610ce261187c565b82611952565b610d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612cfc6031913960400191505060405180910390fd5b610d48838383611a46565b505050565b6000610da082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c8990919063ffffffff16565b905092915050565b610dc3838383604051806020016040528060008152506111f1565b505050565b600080610ddf836002611ca390919063ffffffff16565b50905080915050919050565b6000610e1b82604051806060016040528060298152602001612c0c602991396002611ccf9092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eba5780601f10610e8f57610100808354040283529160200191610eba565b820191906000526020600020905b815481529060010190602001808311610e9d57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612be2602a913960400191505060405180910390fd5b610f92600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611cee565b9050919050565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110315780601f1061100657610100808354040283529160200191611031565b820191906000526020600020905b81548152906001019060200180831161101457829003601f168201915b5050505050905090565b61104361187c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600560006110f161187c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661119e61187c565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6112026111fc61187c565b83611952565b611257576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612cfc6031913960400191505060405180910390fd5b61126384848484611d03565b50505050565b600a818154811061127657fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561131a5780601f106112ef5761010080835404028352916020019161131a565b820191906000526020600020905b8154815290600101906020018083116112fd57829003601f168201915b505050505081565b606061132d8261185f565b611382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612cac602f913960400191505060405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561142b5780601f106114005761010080835404028352916020019161142b565b820191906000526020600020905b81548152906001019060200180831161140e57829003601f168201915b5050505050905060006009805460018160011615610100020316600290049050141561145a5780915050611606565b6000815111156115335760098160405160200180838054600181600116156101000203166002900480156114c55780601f106114a35761010080835404028352918201916114c5565b820191906000526020600020905b8154815290600101906020018083116114b1575b505082805190602001908083835b602083106114f657805182526020820191506020810190506020830392506114d3565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050611606565b600961153e84611d75565b604051602001808380546001816001161561010002031660029004801561159c5780601f1061157a57610100808354040283529182019161159c565b820191906000526020600020905b815481529060010190602001808311611588575b505082805190602001908083835b602083106115cd57805182526020820191506020810190506020830392506115aa565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b600b816040518082805190602001908083835b60208310611641578051825260208201915060208101905060208303925061161e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff16156116f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f436f6c6f7220616c72656164792065786973747300000000000000000000000081525060200191505060405180910390fd5b600a81908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190611730929190612a68565b506000600a8054905090506117453382611ebc565b6001600b836040518082805190602001908083835b6020831061177d578051825260208201915060208101905060208303925061175a565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006118758260026120b090919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166118f783610deb565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061194b826000016120ca565b9050919050565b600061195d8261185f565b6119b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612b7e602c913960400191505060405180910390fd5b60006119bd83610deb565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a2c57508373ffffffffffffffffffffffffffffffffffffffff16611a1484610ae7565b73ffffffffffffffffffffffffffffffffffffffff16145b80611a3d5750611a3c81856117cb565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611a6682610deb565b73ffffffffffffffffffffffffffffffffffffffff1614611ad2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612c836029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612b5a6024913960400191505060405180910390fd5b611b638383836120db565b611b6e600082611884565b611bbf81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120e090919063ffffffff16565b50611c1181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120fa90919063ffffffff16565b50611c28818360026121149092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611c988360000183612149565b60001c905092915050565b600080600080611cb686600001866121cc565b915091508160001c8160001c9350935050509250929050565b6000611ce2846000018460001b84612265565b60001c90509392505050565b6000611cfc8260000161235b565b9050919050565b611d0e848484611a46565b611d1a8484848461236c565b611d6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612b286032913960400191505060405180910390fd5b50505050565b60606000821415611dbd576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611eb7565b600082905060005b60008214611de7578080600101915050600a8281611ddf57fe5b049150611dc5565b60608167ffffffffffffffff81118015611e0057600080fd5b506040519080825280601f01601f191660200182016040528015611e335781602001600182028036833780820191505090505b50905060006001830390508593505b60008414611eaf57600a8481611e5457fe5b0660300160f81b82828060019003935081518110611e6e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611ea757fe5b049350611e42565b819450505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b611f688161185f565b15611fdb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b611fe7600083836120db565b61203881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120fa90919063ffffffff16565b5061204f818360026121149092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006120c2836000018360001b612585565b905092915050565b600081600001805490509050919050565b505050565b60006120f2836000018360001b6125a8565b905092915050565b600061210c836000018360001b612690565b905092915050565b6000612140846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612700565b90509392505050565b6000818360000180549050116121aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612b066022913960400191505060405180910390fd5b8260000182815481106121b957fe5b9060005260206000200154905092915050565b6000808284600001805490501161222e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612c356022913960400191505060405180910390fd5b600084600001848154811061223f57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b6000808460010160008581526020019081526020016000205490506000811415839061232c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156122f15780820151818401526020810190506122d6565b50505050905090810190601f16801561231e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061233f57fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b600061238d8473ffffffffffffffffffffffffffffffffffffffff166127dc565b61239a576001905061257d565b606061250463150b7a0260e01b6123af61187c565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612433578082015181840152602081019050612418565b50505050905090810190601f1680156124605780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001612b28603291398773ffffffffffffffffffffffffffffffffffffffff166128279092919063ffffffff16565b9050600081806020019051602081101561251d57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b6000808360010160008481526020019081526020016000205490506000811461268457600060018203905060006001866000018054905003905060008660000182815481106125f357fe5b906000526020600020015490508087600001848154811061261057fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061264857fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061268a565b60009150505b92915050565b600061269c838361283f565b6126f55782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506126fa565b600090505b92915050565b60008084600101600085815260200190815260200160002054905060008114156127a7578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506127d5565b828560000160018303815481106127ba57fe5b90600052602060002090600202016001018190555060009150505b9392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561281e57506000801b8214155b92505050919050565b60606128368484600085612862565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b606061286d856127dc565b6128df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061292f578051825260208201915060208101905060208303925061290c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612991576040519150601f19603f3d011682016040523d82523d6000602084013e612996565b606091505b509150915081156129ab578092505050612a60565b6000815111156129be5780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612a25578082015181840152602081019050612a0a565b50505050905090810190601f168015612a525780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612aa957805160ff1916838001178555612ad7565b82800160010185558215612ad7579182015b82811115612ad6578251825591602001919060010190612abb565b5b509050612ae49190612ae8565b5090565b5b80821115612b01576000816000905550600101612ae9565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220f29937fc6ac3d17b304e12c4afc3df911700acf8ba672f6b3392eabe58b39caa64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80636352211e116100ad578063b88d4fde11610071578063b88d4fde14610656578063bd11f69d1461075b578063c87b56dd14610802578063d85d3d27146108a9578063e985e9c51461096457610121565b80636352211e146104505780636c0360eb146104a857806370a082311461052b57806395d89b4114610583578063a22cb4651461060657610121565b806318160ddd116100f457806318160ddd146102b257806323b872dd146102d05780632f745c591461033e57806342842e0e146103a05780634f6ccce71461040e57610121565b806301ffc9a71461012657806306fdde0314610189578063081812fc1461020c578063095ea7b314610264575b600080fd5b6101716004803603602081101561013c57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506109de565b60405180821515815260200191505060405180910390f35b610191610a45565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d15780820151818401526020810190506101b6565b50505050905090810190601f1680156101fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102386004803603602081101561022257600080fd5b8101908080359060200190929190505050610ae7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b06004803603604081101561027a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b82565b005b6102ba610cc6565b6040518082815260200191505060405180910390f35b61033c600480360360608110156102e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cd7565b005b61038a6004803603604081101561035457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d4d565b6040518082815260200191505060405180910390f35b61040c600480360360608110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610da8565b005b61043a6004803603602081101561042457600080fd5b8101908080359060200190929190505050610dc8565b6040518082815260200191505060405180910390f35b61047c6004803603602081101561046657600080fd5b8101908080359060200190929190505050610deb565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b0610e22565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f05780820151818401526020810190506104d5565b50505050905090810190601f16801561051d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61056d6004803603602081101561054157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ec4565b6040518082815260200191505060405180910390f35b61058b610f99565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105cb5780820151818401526020810190506105b0565b50505050905090810190601f1680156105f85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106546004803603604081101561061c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061103b565b005b6107596004803603608081101561066c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156106d357600080fd5b8201836020820111156106e557600080fd5b8035906020019184600183028401116401000000008311171561070757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111f1565b005b6107876004803603602081101561077157600080fd5b8101908080359060200190929190505050611269565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107c75780820151818401526020810190506107ac565b50505050905090810190601f1680156107f45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61082e6004803603602081101561081857600080fd5b8101908080359060200190929190505050611322565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561086e578082015181840152602081019050610853565b50505050905090810190601f16801561089b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610962600480360360208110156108bf57600080fd5b81019080803590602001906401000000008111156108dc57600080fd5b8201836020820111156108ee57600080fd5b8035906020019184600183028401116401000000008311171561091057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061160b565b005b6109c66004803603604081101561097a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117cb565b60405180821515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610add5780601f10610ab257610100808354040283529160200191610add565b820191906000526020600020905b815481529060010190602001808311610ac057829003601f168201915b5050505050905090565b6000610af28261185f565b610b47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612c57602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b8d82610deb565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612cdb6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610c3361187c565b73ffffffffffffffffffffffffffffffffffffffff161480610c625750610c6181610c5c61187c565b6117cb565b5b610cb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612baa6038913960400191505060405180910390fd5b610cc18383611884565b505050565b6000610cd2600261193d565b905090565b610ce8610ce261187c565b82611952565b610d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612cfc6031913960400191505060405180910390fd5b610d48838383611a46565b505050565b6000610da082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c8990919063ffffffff16565b905092915050565b610dc3838383604051806020016040528060008152506111f1565b505050565b600080610ddf836002611ca390919063ffffffff16565b50905080915050919050565b6000610e1b82604051806060016040528060298152602001612c0c602991396002611ccf9092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eba5780601f10610e8f57610100808354040283529160200191610eba565b820191906000526020600020905b815481529060010190602001808311610e9d57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612be2602a913960400191505060405180910390fd5b610f92600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611cee565b9050919050565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110315780601f1061100657610100808354040283529160200191611031565b820191906000526020600020905b81548152906001019060200180831161101457829003601f168201915b5050505050905090565b61104361187c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600560006110f161187c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661119e61187c565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6112026111fc61187c565b83611952565b611257576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612cfc6031913960400191505060405180910390fd5b61126384848484611d03565b50505050565b600a818154811061127657fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561131a5780601f106112ef5761010080835404028352916020019161131a565b820191906000526020600020905b8154815290600101906020018083116112fd57829003601f168201915b505050505081565b606061132d8261185f565b611382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612cac602f913960400191505060405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561142b5780601f106114005761010080835404028352916020019161142b565b820191906000526020600020905b81548152906001019060200180831161140e57829003601f168201915b5050505050905060006009805460018160011615610100020316600290049050141561145a5780915050611606565b6000815111156115335760098160405160200180838054600181600116156101000203166002900480156114c55780601f106114a35761010080835404028352918201916114c5565b820191906000526020600020905b8154815290600101906020018083116114b1575b505082805190602001908083835b602083106114f657805182526020820191506020810190506020830392506114d3565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050611606565b600961153e84611d75565b604051602001808380546001816001161561010002031660029004801561159c5780601f1061157a57610100808354040283529182019161159c565b820191906000526020600020905b815481529060010190602001808311611588575b505082805190602001908083835b602083106115cd57805182526020820191506020810190506020830392506115aa565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b600b816040518082805190602001908083835b60208310611641578051825260208201915060208101905060208303925061161e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff16156116f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f436f6c6f7220616c72656164792065786973747300000000000000000000000081525060200191505060405180910390fd5b600a81908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190611730929190612a68565b506000600a8054905090506117453382611ebc565b6001600b836040518082805190602001908083835b6020831061177d578051825260208201915060208101905060208303925061175a565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006118758260026120b090919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166118f783610deb565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061194b826000016120ca565b9050919050565b600061195d8261185f565b6119b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612b7e602c913960400191505060405180910390fd5b60006119bd83610deb565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a2c57508373ffffffffffffffffffffffffffffffffffffffff16611a1484610ae7565b73ffffffffffffffffffffffffffffffffffffffff16145b80611a3d5750611a3c81856117cb565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611a6682610deb565b73ffffffffffffffffffffffffffffffffffffffff1614611ad2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612c836029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612b5a6024913960400191505060405180910390fd5b611b638383836120db565b611b6e600082611884565b611bbf81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120e090919063ffffffff16565b50611c1181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120fa90919063ffffffff16565b50611c28818360026121149092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611c988360000183612149565b60001c905092915050565b600080600080611cb686600001866121cc565b915091508160001c8160001c9350935050509250929050565b6000611ce2846000018460001b84612265565b60001c90509392505050565b6000611cfc8260000161235b565b9050919050565b611d0e848484611a46565b611d1a8484848461236c565b611d6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612b286032913960400191505060405180910390fd5b50505050565b60606000821415611dbd576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611eb7565b600082905060005b60008214611de7578080600101915050600a8281611ddf57fe5b049150611dc5565b60608167ffffffffffffffff81118015611e0057600080fd5b506040519080825280601f01601f191660200182016040528015611e335781602001600182028036833780820191505090505b50905060006001830390508593505b60008414611eaf57600a8481611e5457fe5b0660300160f81b82828060019003935081518110611e6e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611ea757fe5b049350611e42565b819450505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b611f688161185f565b15611fdb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b611fe7600083836120db565b61203881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120fa90919063ffffffff16565b5061204f818360026121149092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006120c2836000018360001b612585565b905092915050565b600081600001805490509050919050565b505050565b60006120f2836000018360001b6125a8565b905092915050565b600061210c836000018360001b612690565b905092915050565b6000612140846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612700565b90509392505050565b6000818360000180549050116121aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612b066022913960400191505060405180910390fd5b8260000182815481106121b957fe5b9060005260206000200154905092915050565b6000808284600001805490501161222e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612c356022913960400191505060405180910390fd5b600084600001848154811061223f57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b6000808460010160008581526020019081526020016000205490506000811415839061232c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156122f15780820151818401526020810190506122d6565b50505050905090810190601f16801561231e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061233f57fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b600061238d8473ffffffffffffffffffffffffffffffffffffffff166127dc565b61239a576001905061257d565b606061250463150b7a0260e01b6123af61187c565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612433578082015181840152602081019050612418565b50505050905090810190601f1680156124605780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001612b28603291398773ffffffffffffffffffffffffffffffffffffffff166128279092919063ffffffff16565b9050600081806020019051602081101561251d57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b6000808360010160008481526020019081526020016000205490506000811461268457600060018203905060006001866000018054905003905060008660000182815481106125f357fe5b906000526020600020015490508087600001848154811061261057fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061264857fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061268a565b60009150505b92915050565b600061269c838361283f565b6126f55782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506126fa565b600090505b92915050565b60008084600101600085815260200190815260200160002054905060008114156127a7578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506127d5565b828560000160018303815481106127ba57fe5b90600052602060002090600202016001018190555060009150505b9392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561281e57506000801b8214155b92505050919050565b60606128368484600085612862565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b606061286d856127dc565b6128df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061292f578051825260208201915060208101905060208303925061290c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612991576040519150601f19603f3d011682016040523d82523d6000602084013e612996565b606091505b509150915081156129ab578092505050612a60565b6000815111156129be5780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612a25578082015181840152602081019050612a0a565b50505050905090810190601f168015612a525780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612aa957805160ff1916838001178555612ad7565b82800160010185558215612ad7579182015b82811115612ad6578251825591602001919060010190612abb565b5b509050612ae49190612ae8565b5090565b5b80821115612b01576000816000905550600101612ae9565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220f29937fc6ac3d17b304e12c4afc3df911700acf8ba672f6b3392eabe58b39caa64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "82:393:0:-:0;;;176:49;;;;;;;;;;42250:365:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9662:40;9329:10;9681:20;;9662:18;;;:40;;:::i;:::-;42330:4;42322:5;:12;;;;;;;;;;;;:::i;:::-;;42354:6;42344:7;:16;;;;;;;;;;;;:::i;:::-;;42448:40;41415:10;42467:20;;42448:18;;;:40;;:::i;:::-;42498:49;41747:10;42517:29;;42498:18;;;:49;;:::i;:::-;42557:51;42120:10;42576:31;;42557:18;;;:51;;:::i;:::-;42250:365;;82:393:0;;10393:198:1;10491:10;10476:25;;:11;:25;;;;;10468:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10580:4;10544:20;:33;10565:11;10544:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;10393:198;:::o;82:393:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "82:393:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9859:140:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;43171:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45778:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;45336:381;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;44846:200;;;:::i;:::-;;;;;;;;;;;;;;;;;;;46626:300;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;44623:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;46992:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;45118:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;42942:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;44457:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42674:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;43325:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46054:290;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;47207:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;111:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43485:740:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;228:245:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;46410:154:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9859:140;9936:4;9959:20;:33;9980:11;9959:33;;;;;;;;;;;;;;;;;;;;;;;;;;;9952:40;;9859:140;;;:::o;43171:90::-;43217:13;43249:5;43242:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43171:90;:::o;45778:209::-;45846:7;45873:16;45881:7;45873;:16::i;:::-;45865:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45956:15;:24;45972:7;45956:24;;;;;;;;;;;;;;;;;;;;;45949:31;;45778:209;;;:::o;45336:381::-;45416:13;45432:16;45440:7;45432;:16::i;:::-;45416:32;;45472:5;45466:11;;:2;:11;;;;45458:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45550:5;45534:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;45559:37;45576:5;45583:12;:10;:12::i;:::-;45559:16;:37::i;:::-;45534:62;45526:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45689:21;45698:2;45702:7;45689:8;:21::i;:::-;45336:381;;;:::o;44846:200::-;44899:7;45018:21;:12;:19;:21::i;:::-;45011:28;;44846:200;:::o;46626:300::-;46785:41;46804:12;:10;:12::i;:::-;46818:7;46785:18;:41::i;:::-;46777:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46891:28;46901:4;46907:2;46911:7;46891:9;:28::i;:::-;46626:300;;;:::o;44623:152::-;44712:7;44738:30;44762:5;44738:13;:20;44752:5;44738:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;44731:37;;44623:152;;;;:::o;46992:149::-;47095:39;47112:4;47118:2;47122:7;47095:39;;;;;;;;;;;;:16;:39::i;:::-;46992:149;;;:::o;45118:161::-;45185:7;45205:15;45226:22;45242:5;45226:12;:15;;:22;;;;:::i;:::-;45204:44;;;45265:7;45258:14;;;45118:161;;;:::o;42942:167::-;43006:7;43032:70;43049:7;43032:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;43025:77;;42942:167;;;:::o;44457:87::-;44497:13;44529:8;44522:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44457:87;:::o;42674:211::-;42738:7;42782:1;42765:19;;:5;:19;;;;42757:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42849:29;:13;:20;42863:5;42849:20;;;;;;;;;;;;;;;:27;:29::i;:::-;42842:36;;42674:211;;;:::o;43325:94::-;43373:13;43405:7;43398:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43325:94;:::o;46054:290::-;46168:12;:10;:12::i;:::-;46156:24;;:8;:24;;;;46148:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46266:8;46221:18;:32;46240:12;:10;:12::i;:::-;46221:32;;;;;;;;;;;;;;;:42;46254:8;46221:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;46318:8;46289:48;;46304:12;:10;:12::i;:::-;46289:48;;;46328:8;46289:48;;;;;;;;;;;;;;;;;;;;46054:290;;:::o;47207:282::-;47338:41;47357:12;:10;:12::i;:::-;47371:7;47338:18;:41::i;:::-;47330:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47443:39;47457:4;47463:2;47467:7;47476:5;47443:13;:39::i;:::-;47207:282;;;;:::o;111:22:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;43485:740:1:-;43550:13;43583:16;43591:7;43583;:16::i;:::-;43575:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43662:23;43688:10;:19;43699:7;43688:19;;;;;;;;;;;43662:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43806:1;43786:8;43780:22;;;;;;;;;;;;;;;;:27;43776:74;;;43830:9;43823:16;;;;;43776:74;43978:1;43958:9;43952:23;:27;43948:110;;;44026:8;44036:9;44009:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43995:52;;;;;43948:110;44188:8;44198:18;:7;:16;:18::i;:::-;44171:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44157:61;;;43485:740;;;;:::o;228:245:0:-;316:12;329:6;316:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;315:21;307:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:6;376;364:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;387:8;398:6;:13;;;;387:24;;415:22;421:10;433:3;415:5;:22::i;:::-;464:4;441:12;454:6;441:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;228:245;;:::o;46410:154:1:-;46499:4;46522:18;:25;46541:5;46522:25;;;;;;;;;;;;;;;:35;46548:8;46522:35;;;;;;;;;;;;;;;;;;;;;;;;;46515:42;;46410:154;;;;:::o;48922:117::-;48979:4;49002:30;49024:7;49002:12;:21;;:30;;;;:::i;:::-;48995:37;;48922:117;;;:::o;641:104::-;694:15;728:10;721:17;;641:104;:::o;54578:155::-;54670:2;54643:15;:24;54659:7;54643:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;54718:7;54714:2;54687:39;;54696:16;54704:7;54696;:16::i;:::-;54687:39;;;;;;;;;;;;54578:155;;:::o;36779:121::-;36848:7;36874:19;36882:3;:10;;36874:7;:19::i;:::-;36867:26;;36779:121;;;:::o;49197:329::-;49282:4;49306:16;49314:7;49306;:16::i;:::-;49298:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49381:13;49397:16;49405:7;49397;:16::i;:::-;49381:32;;49442:5;49431:16;;:7;:16;;;:51;;;;49475:7;49451:31;;:20;49463:7;49451:11;:20::i;:::-;:31;;;49431:51;:87;;;;49486:32;49503:5;49510:7;49486:16;:32::i;:::-;49431:87;49423:96;;;49197:329;;;;:::o;52191:559::-;52308:4;52288:24;;:16;52296:7;52288;:16::i;:::-;:24;;;52280:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52390:1;52376:16;;:2;:16;;;;52368:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52444:39;52465:4;52471:2;52475:7;52444:20;:39::i;:::-;52545:29;52562:1;52566:7;52545:8;:29::i;:::-;52585:35;52612:7;52585:13;:19;52599:4;52585:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;52630:30;52652:7;52630:13;:17;52644:2;52630:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;52671:29;52688:7;52697:2;52671:12;:16;;:29;;;;;:::i;:::-;;52735:7;52731:2;52716:27;;52725:4;52716:27;;;;;;;;;;;;52191:559;;;:::o;29591:135::-;29662:7;29696:22;29700:3;:10;;29712:5;29696:3;:22::i;:::-;29688:31;;29681:38;;29591:135;;;;:::o;37228:224::-;37308:7;37317;37337:11;37350:13;37367:22;37371:3;:10;;37383:5;37367:3;:22::i;:::-;37336:53;;;;37415:3;37407:12;;37437:5;37429:14;;37399:46;;;;;;37228:224;;;;;:::o;37871:202::-;37978:7;38020:44;38025:3;:10;;38045:3;38037:12;;38051;38020:4;:44::i;:::-;38012:53;;37997:69;;37871:202;;;;;:::o;29147:112::-;29207:7;29233:19;29241:3;:10;;29233:7;:19::i;:::-;29226:26;;29147:112;;;:::o;48350:269::-;48463:28;48473:4;48479:2;48483:7;48463:9;:28::i;:::-;48509:48;48532:4;48538:2;48542:7;48551:5;48509:22;:48::i;:::-;48501:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48350:269;;;;:::o;38299:723::-;38355:13;38581:1;38572:5;:10;38568:51;;;38598:10;;;;;;;;;;;;;;;;;;;;;38568:51;38628:12;38643:5;38628:20;;38658:14;38682:75;38697:1;38689:4;:9;38682:75;;38714:8;;;;;;;38744:2;38736:10;;;;;;;;;38682:75;;;38766:19;38798:6;38788:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38766:39;;38815:13;38840:1;38831:6;:10;38815:26;;38858:5;38851:12;;38873:112;38888:1;38880:4;:9;38873:112;;38946:2;38939:4;:9;;;;;;38934:2;:14;38923:27;;38905:6;38912:7;;;;;;;38905:15;;;;;;;;;;;:45;;;;;;;;;;;38972:2;38964:10;;;;;;;;;38873:112;;;39008:6;38994:21;;;;;;38299:723;;;;:::o;50755:393::-;50848:1;50834:16;;:2;:16;;;;50826:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50906:16;50914:7;50906;:16::i;:::-;50905:17;50897:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50966:45;50995:1;50999:2;51003:7;50966:20;:45::i;:::-;51022:30;51044:7;51022:13;:17;51036:2;51022:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;51063:29;51080:7;51089:2;51063:12;:16;;:29;;;;;:::i;:::-;;51133:7;51129:2;51108:33;;51125:1;51108:33;;;;;;;;;;;;50755:393;;:::o;36547:149::-;36631:4;36654:35;36664:3;:10;;36684:3;36676:12;;36654:9;:35::i;:::-;36647:42;;36547:149;;;;:::o;34239:108::-;34295:7;34321:3;:12;;:19;;;;34314:26;;34239:108;;;:::o;55329:93::-;;;;:::o;28706:135::-;28776:4;28799:35;28807:3;:10;;28827:5;28819:14;;28799:7;:35::i;:::-;28792:42;;28706:135;;;;:::o;28409:129::-;28476:4;28499:32;28504:3;:10;;28524:5;28516:14;;28499:4;:32::i;:::-;28492:39;;28409:129;;;;:::o;35995:174::-;36084:4;36107:55;36112:3;:10;;36132:3;36124:12;;36154:5;36146:14;;36138:23;;36107:4;:55::i;:::-;36100:62;;35995:174;;;;;:::o;26365:201::-;26432:7;26480:5;26459:3;:11;;:18;;;;:26;26451:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26541:3;:11;;26553:5;26541:18;;;;;;;;;;;;;;;;26534:25;;26365:201;;;;:::o;34690:274::-;34757:7;34766;34815:5;34793:3;:12;;:19;;;;:27;34785:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34870:22;34895:3;:12;;34908:5;34895:19;;;;;;;;;;;;;;;;;;34870:44;;34932:5;:10;;;34944:5;:12;;;34924:33;;;;;34690:274;;;;;:::o;35371:315::-;35465:7;35484:16;35503:3;:12;;:17;35516:3;35503:17;;;;;;;;;;;;35484:36;;35550:1;35538:8;:13;;35553:12;35530:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35619:3;:12;;35643:1;35632:8;:12;35619:26;;;;;;;;;;;;;;;;;;:33;;;35612:40;;;35371:315;;;;;:::o;25926:107::-;25982:7;26008:3;:11;;:18;;;;26001:25;;25926:107;;;:::o;53983:589::-;54103:4;54128:15;:2;:13;;;:15::i;:::-;54123:58;;54166:4;54159:11;;;;54123:58;54190:23;54216:246;54268:45;;;54327:12;:10;:12::i;:::-;54353:4;54371:7;54392:5;54232:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54216:246;;;;;;;;;;;;;;;;;:2;:15;;;;:246;;;;;:::i;:::-;54190:272;;54472:13;54499:10;54488:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54472:48;;39753:10;54548:16;;54538:26;;;:6;:26;;;;54530:35;;;;53983:589;;;;;;;:::o;34026:123::-;34097:4;34141:1;34120:3;:12;;:17;34133:3;34120:17;;;;;;;;;;;;:22;;34113:29;;34026:123;;;;:::o;24125:1512::-;24191:4;24307:18;24328:3;:12;;:19;24341:5;24328:19;;;;;;;;;;;;24307:40;;24376:1;24362:10;:15;24358:1273;;24719:21;24756:1;24743:10;:14;24719:38;;24771:17;24812:1;24791:3;:11;;:18;;;;:22;24771:42;;25053:17;25073:3;:11;;25085:9;25073:22;;;;;;;;;;;;;;;;25053:42;;25216:9;25187:3;:11;;25199:13;25187:26;;;;;;;;;;;;;;;:38;;;;25333:1;25317:13;:17;25291:3;:12;;:23;25304:9;25291:23;;;;;;;;;;;:43;;;;25440:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;25532:3;:12;;:19;25545:5;25532:19;;;;;;;;;;;25525:26;;;25573:4;25566:11;;;;;;;;24358:1273;25615:5;25608:12;;;24125:1512;;;;;:::o;23553:404::-;23616:4;23637:21;23647:3;23652:5;23637:9;:21::i;:::-;23632:319;;23674:3;:11;;23691:5;23674:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23854:3;:11;;:18;;;;23832:3;:12;;:19;23845:5;23832:19;;;;;;;;;;;:40;;;;23893:4;23886:11;;;;23632:319;23935:5;23928:12;;23553:404;;;;;:::o;31584:678::-;31660:4;31774:16;31793:3;:12;;:17;31806:3;31793:17;;;;;;;;;;;;31774:36;;31837:1;31825:8;:13;31821:435;;;31891:3;:12;;31909:38;;;;;;;;31926:3;31909:38;;;;31939:5;31909:38;;;31891:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32103:3;:12;;:19;;;;32083:3;:12;;:17;32096:3;32083:17;;;;;;;;;;;:39;;;;32143:4;32136:11;;;;;31821:435;32214:5;32178:3;:12;;32202:1;32191:8;:12;32178:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;32240:5;32233:12;;;31584:678;;;;;;:::o;16555:610::-;16615:4;16873:16;16899:19;16921:66;16899:88;;;;17088:7;17076:20;17064:32;;17127:11;17115:8;:23;;:42;;;;;17154:3;17142:15;;:8;:15;;17115:42;17107:51;;;;16555:610;;;:::o;19607:194::-;19710:12;19741:53;19764:6;19772:4;19778:1;19781:12;19741:22;:53::i;:::-;19734:60;;19607:194;;;;;:::o;25718:127::-;25791:4;25837:1;25814:3;:12;;:19;25827:5;25814:19;;;;;;;;;;;;:24;;25807:31;;25718:127;;;;:::o;20954:958::-;21084:12;21116:18;21127:6;21116:10;:18::i;:::-;21108:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21239:12;21253:23;21280:6;:11;;21300:8;21311:4;21280:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21238:78;;;;21330:7;21326:580;;;21360:10;21353:17;;;;;;21326:580;21491:1;21471:10;:17;:21;21467:429;;;21729:10;21723:17;21789:15;21776:10;21772:2;21768:19;21761:44;21678:145;21868:12;21861:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20954:958;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"./ERC721.sol\";\n\ncontract Color is ERC721 {\n\n\tstring[] public colors;\n\tmapping(string => bool) _colorExists;\n\n\tconstructor() ERC721(\"Color\",\"COLOR\") public {\n\t}\n\n\tfunction mint(string memory _color) public {\n\t\t//Color - Add it and Track it\n\t\trequire(!_colorExists[_color],\"Color already exists\");\n\t\tcolors.push(_color);\n\t\tuint _id = colors.length;\n\t\t_mint(msg.sender, _id);\n\t\t_colorExists[_color] = true; \n\t}\n}",
  "sourcePath": "/Users/malhar197/Desktop/final-presentation/Color-DApp/NFT/src/contracts/Color.sol",
  "ast": {
    "absolutePath": "/Users/malhar197/Desktop/final-presentation/Color-DApp/NFT/src/contracts/Color.sol",
    "exportedSymbols": {
      "Color": [
        57
      ]
    },
    "id": 58,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "/Users/malhar197/Desktop/final-presentation/Color-DApp/NFT/src/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 2583,
        "src": "58:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2582,
              "src": "100:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2582",
                "typeString": "contract ERC721"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "100:6:0"
          }
        ],
        "contractDependencies": [
          80,
          91,
          205,
          230,
          259,
          331,
          2582
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57,
          2582,
          259,
          230,
          205,
          331,
          91,
          80
        ],
        "name": "Color",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bd11f69d",
            "id": 7,
            "mutability": "mutable",
            "name": "colors",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 57,
            "src": "111:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 5,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "111:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 6,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "111:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "_colorExists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 57,
            "src": "136:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "144:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "136:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 9,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "154:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "221:4:0",
              "statements": []
            },
            "documentation": null,
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "436f6c6f72",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "197:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f86d44f1b3080fc640c3bc711000ce53504da44b246ae744f9a196485424813c",
                      "typeString": "literal_string \"Color\""
                    },
                    "value": "Color"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "434f4c4f52",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "205:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e108be43dbedebdd6a5e12088e3ff0ee819db892baccf0fc636e26a2da6c252c",
                      "typeString": "literal_string \"COLOR\""
                    },
                    "value": "COLOR"
                  }
                ],
                "id": 16,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2582,
                  "src": "190:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$2582_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "190:23:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "187:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:0"
            },
            "scope": 57,
            "src": "176:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "271:202:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "315:21:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 25,
                            "name": "_colorExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "316:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 27,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 26,
                            "name": "_color",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "329:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "316:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6c6f7220616c726561647920657869737473",
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "337:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cbf32c7c4ff8b334dcba641eb8580bef15bb27274fadcedc2fd6a60af849066",
                          "typeString": "literal_string \"Color already exists\""
                        },
                        "value": "Color already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cbf32c7c4ff8b334dcba641eb8580bef15bb27274fadcedc2fd6a60af849066",
                          "typeString": "literal_string \"Color already exists\""
                        }
                      ],
                      "id": 24,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "307:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "307:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "307:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "376:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "colors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "364:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "364:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "364:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "364:19:0"
                },
                {
                  "assignments": [
                    39
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39,
                      "mutability": "mutable",
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 55,
                      "src": "387:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "387:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 42,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "colors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "398:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "398:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "387:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "421:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "421:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 46,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "433:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 43,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2318,
                      "src": "415:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "415:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "415:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "_colorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "441:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 51,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "454:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "441:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "464:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "441:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "441:27:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d85d3d27",
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "242:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "241:22:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:0:0"
            },
            "scope": 57,
            "src": "228:245:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 58,
        "src": "82:393:0"
      }
    ],
    "src": "33:442:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/malhar197/Desktop/final-presentation/Color-DApp/NFT/src/contracts/Color.sol",
    "exportedSymbols": {
      "Color": [
        57
      ]
    },
    "id": 58,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "/Users/malhar197/Desktop/final-presentation/Color-DApp/NFT/src/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 2583,
        "src": "58:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2582,
              "src": "100:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2582",
                "typeString": "contract ERC721"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "100:6:0"
          }
        ],
        "contractDependencies": [
          80,
          91,
          205,
          230,
          259,
          331,
          2582
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57,
          2582,
          259,
          230,
          205,
          331,
          91,
          80
        ],
        "name": "Color",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bd11f69d",
            "id": 7,
            "mutability": "mutable",
            "name": "colors",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 57,
            "src": "111:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 5,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "111:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 6,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "111:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "_colorExists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 57,
            "src": "136:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "144:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "136:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 9,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "154:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "221:4:0",
              "statements": []
            },
            "documentation": null,
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "436f6c6f72",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "197:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f86d44f1b3080fc640c3bc711000ce53504da44b246ae744f9a196485424813c",
                      "typeString": "literal_string \"Color\""
                    },
                    "value": "Color"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "434f4c4f52",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "205:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e108be43dbedebdd6a5e12088e3ff0ee819db892baccf0fc636e26a2da6c252c",
                      "typeString": "literal_string \"COLOR\""
                    },
                    "value": "COLOR"
                  }
                ],
                "id": 16,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2582,
                  "src": "190:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$2582_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "190:23:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "187:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:0"
            },
            "scope": 57,
            "src": "176:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "271:202:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "315:21:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 25,
                            "name": "_colorExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "316:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 27,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 26,
                            "name": "_color",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "329:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "316:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6c6f7220616c726561647920657869737473",
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "337:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cbf32c7c4ff8b334dcba641eb8580bef15bb27274fadcedc2fd6a60af849066",
                          "typeString": "literal_string \"Color already exists\""
                        },
                        "value": "Color already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cbf32c7c4ff8b334dcba641eb8580bef15bb27274fadcedc2fd6a60af849066",
                          "typeString": "literal_string \"Color already exists\""
                        }
                      ],
                      "id": 24,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "307:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "307:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "307:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "376:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "colors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "364:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "364:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "364:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "364:19:0"
                },
                {
                  "assignments": [
                    39
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39,
                      "mutability": "mutable",
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 55,
                      "src": "387:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "387:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 42,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "colors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "398:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "398:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "387:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "421:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "421:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 46,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "433:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 43,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2318,
                      "src": "415:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "415:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "415:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "_colorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "441:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 51,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "454:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "441:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "464:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "441:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "441:27:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d85d3d27",
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "242:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "241:22:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:0:0"
            },
            "scope": 57,
            "src": "228:245:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 58,
        "src": "82:393:0"
      }
    ],
    "src": "33:442:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3b4e3C2881eF819CE6adfdDAdB7e07AE116B9eF5",
      "transactionHash": "0x4c7758659200f6be1a9797a507e07d41777b08542d45156c7cf61e9e92b7c2f2"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-08-10T00:12:28.060Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}